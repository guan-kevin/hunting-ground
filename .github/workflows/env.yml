name: Env
on: [push, pull_request]

env:
  TEST: Test Env
  DEBUG: Debug Env
  WorkflowEnv1: Workflow 1
  WorkflowEnv2: Workflow 2
  WorkflowJobEnv: Workflow 3
  WorkflowJobStepEnv: Workflow 4
  WorkflowStepEnv: Workflow 5
  
  
jobs:
  build:
    name: ENV test
    runs-on: ubuntu-20.04
    env:
      JobEnv1: Job 1
      JobEnv2: Job 2
      WorkflowJobEnv: Job 3
      WorkflowJobStepEnv: Job 4
      obStepEnv: Job 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: Print Env
        run: |
          printenv
          echo "Summary:"
          echo "WorkflowEnv1: ${WorkflowEnv1} vs ${{ env.WorkflowEnv1 }}"
          echo "WorkflowEnv2: ${WorkflowEnv2} vs ${{ env.WorkflowEnv2 }}"
          echo "JobEnv1: ${JobEnv1} vs ${{ env.JobEnv1 }}"
          echo "JobEnv2: ${JobEnv2} vs ${{ env.JobEnv2 }}"
          echo "StepEnv1: ${StepEnv1} vs ${{ env.StepEnv1 }}"
          echo "StepEnv2: ${StepEnv2} vs ${{ env.StepEnv2 }}"
          echo "WorkflowJobEnv: ${WorkflowJobEnv} vs ${{ env.WorkflowJobEnv }}"
          echo "JobStepEnv: ${JobStepEnv} vs ${{ env.JobStepEnv }}"
          echo "WorkflowJobStepEnv: ${WorkflowJobStepEnv} vs ${{ env.WorkflowJobStepEnv }}"
          echo "WorkflowStepEnv: ${WorkflowStepEnv} vs ${{ env.WorkflowStepEnv }}"
        env:
            StepEnv1: Step 1
            StepEnv2: Step 2
            WorkflowJobStepEnv: Step 3
            JobStepEnv: Step 4
            WorkflowStepEnv: Step 5
      - name: Python Test
        run: |
          import os
          import random
          print('Running python script')
          print('Random number: {}'.format(random.randint(1, 10000)))
          print('TEST: {} and DEBUG: {} and LOCAL: {}'.format(os.getenv('TEST'), os.getenv('DEBUG'), os.getenv('LOCAL')))
          print('TEST: ${{ env.TEST }} and DEBUG: ${{ env.DEBUG }} and LOCAL: ${{ env.LOCAL }}')
        env:
          LOCAL: Local Env
        shell: python
      - name: Add to env
        run: |
          echo "DYNAMIC_ENV=first" >> $GITHUB_ENV
      - name: Print Dyanmic Env
        run: |
          echo "Dynamic Env is ${DYNAMIC_ENV} vs ${{ env.DYNAMIC_ENV }}"
      - name: Python 1
        run: python src/pitching_machine.py
